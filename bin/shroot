#!/bin/sh -e

# http://www.openbsd.org/faq/upgrade46.html#upgrade

MERGE=0
SKELETON=
RELEASE=
SETROOT=
SUDO=/usr/bin/sudo
SETEXT=.tgz
SETS="xserv xfont xshare xbase game misc comp man base"

usage () {
    echo "$0 [-m] [-S SUDO] [-k SKELETON] [-r RELEASE] [-s SETROOT] CHROOTDIR"
}

say () {
    echo "===> $*"
}

warn () {
    echo "=!=> $*"
}

fail () {
    warn $*
    exit 1
}

abspath () {
    OPWD="${PWD}"
    cd "$1"
    echo $PWD
    cd "${OPWD}"
}

enter_chroot () {
    ARGS=${*:-/bin/ksh -l}
    ${SUDO} chroot "${CHROOTDIR}" ${ARGS}
}

build_chroot () {
    for SET in ${SETS}; do
        [ -n "${RELEASE}" ] && break
        SETFILE=$(echo ${SETROOT}/${SET}*${SETEXT})
        if [ -f "${SETFILE}" ]; then
            RELEASE=${SETFILE##*${SET}}
            RELEASE=${RELEASE%${SETEXT}}
        fi
    done

    if [ -z "${RELEASE}" ]; then
        warn "You must specify a release"; usage; exit 1
    fi

    [ -d "${CHROOTDIR}" ] || ${SUDO} mkdir -p "${CHROOTDIR}"
    CHROOTDIR="$(abspath "${CHROOTDIR}")"

    say "Installing kernel"
    cd "${CHROOTDIR}"
    ${SUDO} rm -f obsd
    [ -r bsd ] && ${SUDO} ln bsd obsd
    ${SUDO} cp "${SETROOT}/bsd" nbsd && ${SUDO} mv nbsd bsd
    [ -r ./sbin/reboot ] && ${SUDO} cp ./sbin/reboot ./sbin/oreboot
    cd "${SETROOT}"
    ${SUDO} cp bsd.rd bsd.mp "${CHROOTDIR}/."

    ALLSETS="${SETS}"
    if [ "${MERGE}" -eq 0 ]; then
        ALLSETS="${SETS} etc xetc"
    else
        say "Not extracting etc${RELEASE}/xetc${RELEASE} -- merge later"
    fi

    for SET in ${ALLSETS}; do
        SETFILE=${SET}${RELEASE}${SETEXT}
        [ -r "${SETFILE}" ] || fail "Set ${SETFILE} not found in ${SETROOT}"
        say "Extracting ${SETFILE}"
        ${SUDO} tar -C "${CHROOTDIR}/" -xzphf "${SETFILE}"
    done

    say "Running MAKEDEV"
    cd "${CHROOTDIR}/dev" && ${SUDO} ./MAKEDEV all
    cd "${SETROOT}"

    say "Building password and group databases"
    enter_chroot /usr/sbin/pwd_mkdb -p /etc/master.passwd

    say "Updating /etc/{localtime,resolv.conf}"
    ${SUDO} ln -sf "$(readlink /etc/localtime)" "${CHROOTDIR}/etc/localtime"
    ${SUDO} cp /etc/resolv.conf "${CHROOTDIR}/etc/resolv.conf"
        
    say "Updating dev.db and ld.so.hints"
    enter_chroot /usr/sbin/dev_mkdb
    enter_chroot /sbin/ldconfig /usr/lib /usr/local/lib /usr/X11R6/lib

    if [ -x "${CHROOTDIR}/root/chroot.site" ]; then
        say "Running /root/chroot.site"
        enter_chroot /root/chroot.site
    fi

    if [ -n "${SKELETON}" -a -d "${SKELETON}" ]; then
        say "Copying skeleton files"
        ${SUDO} rsync -azr "${SKELETON}/" "${CHROOTDIR}/"
    fi

}

while getopts mS:hk:r:s: ARG; do
    case "${ARG}" in
        m) MERGE=1;;
        S) SUDO="${OPTARG}";;
        k) SKELETON=$(abspath "${OPTARG}");;
        r) RELEASE="${OPTARG}";;
        s) SETROOT=$(abspath "${OPTARG}");;
        *) usage; exit 1;;
    esac
done

shift $(($OPTIND - 1))
CHROOTDIR=$1
shift

if [ -n "${SETROOT}" ]; then
    build_chroot
else
    enter_chroot $*
fi
