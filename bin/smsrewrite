#!/usr/bin/env python

from itertools import takewhile

# Utilities.
def fmt_header(header, value=None):
    header = header.lower()
    if header == "from":
        value = value.strip(" \"'")
    elif header == "subject":
        value = ' '.join(value.strip().split())

    return header, value

def snip(string, begin, end):
    while True:
	left = string.find(begin)
	right = string.rfind(end)
	if (left * right) < 0 or left >= right:
	    break
	string = string[:left] + string[right + 1:]

    return string

split_header = lambda line: fmt_header(*line.split(':', 1))
kill_space = lambda string: ' '.join(string.strip().split())
truncate = lambda string, limit: len(string) > limit and string[:limit - 3] + '...' or string

# Tidy functions.
tidy_prefix = "tidy_"
tidy_subject = lambda string, limit: truncate(kill_space(snip(string, *'[]')), int(.2 * limit))
tidy_from = lambda string, limit: truncate([x for x in string.split() if '@' in x][0].strip("\"'<>"), int(.2 * limit))
tidy_body = lambda string, limit: kill_space(string)
tidy_message = lambda string, limit: truncate(string, limit)

helpers = dict((k.replace(tidy_prefix, ''), v) for k, v in vars().items()
	if k.startswith(tidy_prefix) and callable(v))
tidy = lambda key, value, helpers, limit: helpers.get(key, lambda x, y: x)(value, limit)

def smsrewrite(template, stream, limit=-1, helpers={}, delim=3 * '\n'):
    headers, sep, body = stream.read().partition(delim)

    values = dict(split_header(l) for l in headers.splitlines())
    values["body"] = body
    for k, v in values.items():
	values[k] = tidy(k, v, helpers, limit)

    return tidy("message", template % values, helpers, limit)

if __name__ == '__main__':
    LIMIT = 135
    TEMPLATE = "From: %(from)s\nSubject: %(subject)s\n\n%(body)s"
    import sys
    sys.stdout.write(smsrewrite(TEMPLATE, sys.stdin, LIMIT, helpers) + '\n')
