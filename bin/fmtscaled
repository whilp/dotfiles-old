#!/usr/bin/env python
# coding: utf-8
"""%prog [options] value
"""

import math
import sys

from optparse import OptionParser, make_option as Opt

SIFORMAT = "{scaled:0.1f} {prefix}{unit}"
SIEXPONENTS = range(24, 2, -3) + range(2, 0, -1)
SIEXPONENTS += [0] + [-x for x in SIEXPONENTS[::-1]]
SIPREFIXES = (
    "Y", "Z", "E", "P", "T", "G", "M", "k", "h", "da",
    "",
    "d", "c", "m", "Î¼", "n", "p", "f", "a", "z", "y"
)
SI = zip(SIEXPONENTS, SIPREFIXES)

def main():
    optparser = OptionParser(option_list=options, usage=__doc__)
    (opts, args) = optparser.parse_args()

    format = opts.format
    unit = opts.unit

    (value,) = args
    sys.stdout.write(fmtscaled(value, format=format, unit=unit) + "\n")

options = [
    Opt("-f", "--format", default=SIFORMAT,
        help="format string (for Python's `str.format`)"),
    Opt("-u", "--unit", default="", help="unit (eg 'B')"),
]

def fmtscaled(number, format=SIFORMAT, unit=""):
    number = float(number)
    l10 = math.log10(number) if number != 0 else 0
    for exponent, prefix in SI:
        if exponent <= l10:
            break
    scaled = number/(10.0**exponent)

    return format.format(number=number, scaled=scaled, prefix=prefix, unit=unit)

if __name__ == "__main__":
    try:
        ret = main()
    except KeyboardInterrupt:
        ret = None
    sys.exit(ret)
