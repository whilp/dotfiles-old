SSH_HOME="$HOME/.ssh"
AGENT_SOCK="${SSH_HOME}/agent.sock"
SSH_AGENT_FILE="${SSH_HOME}/agent"

create_agent () {
    ssh-agent -s -a "${AGENT_SOCK}" | tee "${SSH_AGENT_FILE}"
}

if [ -r ${SSH_AGENT_FILE} ]; then
    notify 2 "Found agent file ${SSH_AGENT_FILE}."
    chmod 600 ${SSH_AGENT_FILE}
    . ${SSH_AGENT_FILE} > /dev/null

    # See if old agent still exists.
    kill -0 ${SSH_AGENT_PID} > /dev/null 2>&1
    if [ $? -gt 0 ]; then
	notify 2 "Agent ${SSH_AGENT_PID} doesn't appear to be running."
	# Agent doesn't exist; make new agent.
	rm -f ${SSH_AGENT_FILE}
	eval `create_agent`
    else
	notify 2 "Agent ${SSH_AGENT_PID} exists."
	# Agent does exist; kill all the other 'uns.
	kill $(pgrep -U ${USER} -x ssh-agent | grep -v ${SSH_AGENT_PID}) > /dev/null 2>&1
    fi
else
    notify 2 "Didn't find an agent file."
    # If we don't know about the agents floating around, kill
    # 'em.
    pkill -U ${USER} -x ssh-agent
    rm -f ${SSH_AGENT_FILE}
    touch ${SSH_AGENT_FILE}
chmod 600 ${SSH_AGENT_FILE}

    # Make new agent
notify 2 "Creating a new agent."
    eval `create_agent`
fi

# List keys represented by the agent; if none, add some keys
if [ ${VERBOSE} -ge 1 ]; then
    ssh-add -l
else
    ssh-add -l 2>&1 > /dev/null
fi
if [ $? -gt 0 ]; then
    notify 2 "Don't appear to be any keys in the agent."
    KEYS=$(find ${SSH_HOME} -follow -name "id_*" \! -name "*.pub")
    ssh-add -t 7d ${KEYS} > /dev/null 2>&1
fi
chmod 600 ${SSH_AGENT_FILE}
