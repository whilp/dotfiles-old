#!/bin/sh

TMUXDIR=~/.tmux
# Later instances of -S will override the first, so it's safe to specify it
# here.
TMUX="tmux -S ${TMUXDIR}/sock"

mkdir -p "${TMUXDIR}" >/dev/null 2>&1

connect () {
    local SESSION=$1; shift
    if [ -r "${CONFIG}" ]; then
        local TMUX="${TMUX} -f ${CONFIG}"
    fi
    local TMUX="${TMUX} $*"

    local _TMUX_SESSION="${TMUX_SESSION}"
    export TMUX_SESSION="${SESSION}"
    # Call the callback if we create a new session and the callback is defined.
    local CONFIGS="${TMUXDIR}/${SESSION}.conf"
    local CONFIG
    if ${TMUX} new-session -ds "${SESSION}" >/dev/null 2>&1; then
        CONFIGS="${CONFIGS} ${TMUXDIR}/${SESSION}-new.conf"
    fi

    for CONFIG in ${CONFIGS}; do
        [ -r "${CONFIG}" ] && ${TMUX} source-file "${CONFIG}"
    done

    ${TMUX} attach-session -dt "${SESSION}"
    export TMUX_SESSION="${_TMUX_SESSION}"
}

remote () {
    local TARGETPAT=$1
    local TARGET=$2
    local SESSION=$3
    shift; shift; shift

    case $(hostname) in
        ${TARGETPAT}) connect "${SESSION}";;
        *) ssh -t "${TARGET}" '~/bin/'"${SESSION}";;
    esac
}

# If called as something other than 'attach', use ${PROG} as the session name.
SESSION="$(basename $0)"
case "${SESSION}" in
    master) connect master -S "${TMUXDIR}/master.sock";;
    meta) remote "burko.*" "meta.lfod.us" master $*;;
    attach) connect $*;;
    *) connect "${SESSION}" $*;;
esac
