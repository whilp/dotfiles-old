#!/usr/bin/env python

import os

from SimpleHTTPServer import (
    SimpleHTTPRequestHandler,
    BaseHTTPServer)

Server = BaseHTTPServer.HTTPServer
class Handler(SimpleHTTPRequestHandler):
    indexes = ["index.html", "index.html", "index.xhtml"]
    
    def translate_path(self, path):
        path = SimpleHTTPRequestHandler.translate_path(self, path)

        if not self.path.endswith('/') or not os.path.isdir(path):
            return path

        # This duplicates logic in send_head() in order to make index detection
        # more extensible. It's a bit of a surprise, but overriding send_head()
        for index in self.indexes:
            index = os.path.join(path, index)
            if os.path.exists(index):
                path = index
                break

        return path

Handler.protocol_version = "HTTP/1.0"
Handler.extensions_map.update({
    ".svg": "image/svg+xml",
    ".xhtml": "application/xhtml+xml",
})

address = ("127.0.0.1", 0)
server = Server(address, Handler)
print "Serving on http://%s:%s/" % server.server_address
try:
    server.serve_forever()
except (KeyboardInterrupt):
    pass
