#!/usr/bin/env python

import json
import re
import sys

from urlparse import urljoin

from lxml import etree, html
from lxml.builder import E

def main():
    format = xspf

    url = sys.argv[1]

    tracks = []
    for trackurl in trackurls(html.parse(url)):
        tracks.append(json.loads(matches(html.parse(trackurl).xpath("//script/text()")).next())) 
    sys.stdout.write("\n".join(format(tracks)) + "\n")

def trackurls(doc):
    url = doc.docinfo.URL
    for trackurl in doc.xpath('//a[@class="gothere pl-button"]/@href'):
        yield urljoin(url, trackurl)

trackre = re.compile("^\s+window.SC.bufferTracks.push\((.*)\)")

def matches(lines):
    for line in lines:
        match = trackre.match(line)
        if not match:
            continue
        yield match.group(1)

def load(tracks):
    for track in tracks:
        yield json.loads(track)

def em3u(tracks):
    yield "#EXTM3U"
    for track in tracks:
        yield "#EXTINF:-1, {user[username]} - {title}\n{streamUrl}".format(**track)

def pls(tracks):
    yield "[playlist]"

    i = 0
    for track in tracks:
        yield "File{i}={streamUrl}\nTitle{i}={title}\nLength{i}=-1".format(i=i, **track)

    yield "NumberOfEntries=%d" % i
    yield "Version=2"

def xspf(tracks):
    tracklist = E.trackList
    track = E.track
    title = E.title
    location = E.location

    playlist = E.playlist(E.trackList(*[
        E.track(
            E.location(track["streamUrl"]),
            E.title(track["title"]),
            E.creator(track["user"]["username"]),
            ) for track in tracks]
    ))

    yield etree.tostring(playlist)

main()
