##################  BEGIN HEADERS
# Filename	: $HOME/.faq
# Use		: collection of questions (and answers) I consistently forget
# Author	: Will Maier <willmaier@ml1.net>
# Updated	: 2005.07.27 12:18:15
##################  END HEADERS

================================================================================

Q: How do I make the computer recognize my funky keys (eg "Play CD", special
Page Up/Page Down)?

A: First, find out the scancode being sent by the keypress. To do this, run
`showkey -s`:

    <vger 17:57> ~ % showkey -s
    kb mode was UNICODE

    (Warning: Currently running in a pseudoterminal.)
    The reported keycodes are probably wrong.

    press any key (program terminates after 10s of last keypress)...
    0x9c
    0xe0 0x5d
    0xe0 0xdd
    0xe0 0x5c
    0xe0 0xdc
    
The keypresses each result in a new line similar to '0xe0 0x5d'. For our
purposes, this can be compressed and written as 'e05d'; this is the format that
`setkeycodes` understands. Having determined the key's scancode, we need to
associate a keycode with the scancode using `setkeycodes`:

    <vger 17:57> ~ % setkeycodes e05d 127
    
In this case, we're setting the keypress event we discovered above to keycode
127. The keycode must be unassigned -- check the output of `dumpkeys` to determine
which are free. The keycode now needs to be associated with an action (like
paging the screen):

    <vger 17:57> ~ % echo "keycode 127 = Prior" | loadkeys

Prior is an alias for PageUp; check the output of `dumpkeys -l` to find other
aliases and action names.

This process would obviously need to be run on every startup; indeed, some of
the steps require root access. Ideally, if you administer the machine you're
using, create a simple shell script to do all of the above and add that script
to your machine's boot sequence. On Ubuntu 5.04 (Hoary), adding such a script to
/etc/init.d/ and creating a symlink from your preferred runlevel (/etc/rc2.d/)
works just fine:

    <vger 17:57> ~ % sudo ln -s /etc/init.d/mykeys.sh /etc/rc2.d/S30mykeys

Be sure to use the correct syntax for init scripts.

================================================================================

Q: How can I make DVD playback a bit smoother?

A: Enable DMA on the DVD drive using hdparm.
    
    <vger 17:57> ~ % sudo hdparm -d 1 /dev/hdc

================================================================================

================================================================================

Q: How can I make MPD (Music Player Daemon) play my files at the right speed?
They all seem really fast...

A: Assuming you've configured MPD to use libao (ALSA output), you may need to
adjust the period size for the driver...

    <vger 17:57> ~ % 
    # ALSA Audio Output
    ao_driver               "alsa09"
    ao_driver_options       "dev=hw:0,0"
    ao_driver_options       "period_size=50000"

The important part is the last line -- the period_size option. 50000 seems to be
a good value, although it might be worth some experimenting to see if fudging it
up or down makes playback any better. Either way, it seems to mostly affect the
speed of playback.

See also: http://mpd.wikicities.com/wiki/Troubleshooting_Libao#Speed_problems

================================================================================

================================================================================

Q: How do I increase the console resolution? I know I need to use 'hwinfo', but
the output's invisible.

A: Here are some common modes:
     Mode 0x0318: 1024x768 (+4096), 24 bits
Add the part after "Mode" to your /boot/grub/menu.lst file in the kernel
declaration section. Set 'vga' equal to the Mode (eg 0x0318) and reboot.

================================================================================

================================================================================
Q: Why doesn't Kismet work?

A: Kismet needs to be told which driver your wireless card uses. Assuming you
know which driver you use, check the Kismet docs for the "Capture Sources"
section. Your /etc/kismet/kismet.conf should have a line starting with
'source'...

    <vger 17:57> ~ % grep ^source /etc/kismet/kismet.conf
    source=madwifi_g,ath0,ath

In this case, we use a card supported by the madwifi driver; the network device
is named 'ath0', and 'ath' is the lexical name we assign to this capture source.
Save the file and give Kismet another try.

================================================================================

================================================================================
Q: What's a super way to debug my .mailfilter?

A: If there's a particular mail that's giving you grief, get a full copy of it
(including headers) and save it locally. Then, run the following:

    <vger 17:57> ~ % maildrop -V8 -d $USER < test.msg

This will run the message through maildrop using your filters; the verbose
output should indicate the problem. Coincidentally, this is also a handy way to
gauge the efficiency of your filterset as well.
    
================================================================================

