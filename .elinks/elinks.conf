## ELinks 0.11.5 configuration file

## This is ELinks configuration file. You can edit it manually,
## if you wish so; this file is edited by ELinks when you save
## options through UI, however only option values will be altered
## and missing options will be added at the end of file; if option
## is not written in this file, but in some file included from it,
## it is NOT counted as missing. Note that all your formatting,
## own comments and so on will be kept as-is.
##
## Obviously, if you don't like what ELinks is going to do with
## this file, you can change it by altering the config.saving_style
## option. Come on, aren't we friendly guys after all?



##############################
# Automatically saved options
#

## config 
#  Configuration handling options.

  ## config.saving_style_w [0|1]
  #  This is internal option used when displaying a warning about
  #  obsolete config.saving_style. You shouldn't touch it.
  set config.saving_style_w = 1


## ui 
#  User interface options.

  ## ui.language <language>
  #  Language of user interface. 'System' means that the language will
  #  be extracted from the environment dynamically.
  set ui.language = "System"





##################################
# Automatically saved keybindings
#

bind "main" "k" = "move-cursor-up"
bind "main" "j" = "move-cursor-down"
bind "menu" "k" = "up"
bind "menu" "l" = "right"
bind "menu" "h" = "left"
bind "menu" "j" = "down"



##################################
# Automatically saved keybindings
#

bind "main" "O" = "goto-url-current"
bind "main" "o" = "goto-url"



##################################
# Automatically saved keybindings
#

bind "main" "t" = "open-new-tab-in-background"



##################################
# Automatically saved keybindings
#

bind "main" "l" = "move-cursor-right"
bind "main" "h" = "move-cursor-left"



##############################
# Automatically saved options
#

## ui 
#  User interface options.

  ## ui.success_msgbox [0|1]
  #  When you pressed a [ Save ] button in some manager, this option
  #  will make sure that a box confirming success of the operation will
  #  pop up.
  set ui.success_msgbox = 0





##############################
# Automatically saved options
#

## document 
#  Document options.

  ## document.browse 
  #  Document browsing options (mainly interactivity).

    ## document.browse.links 
    #  Options for handling of links to other documents.

      ## document.browse.links.numbering [0|1]
      #  Display numbers next to the links.
      set document.browse.links.numbering = 1







##################################
# Automatically saved keybindings
#

bind "main" "Shift-Tab" = "move-link-prev"
bind "main" "Tab" = "move-link-next"



##################################
# Automatically saved keybindings
#

bind "main" "[" = "frame-prev"
bind "main" "]" = "frame-next"



##################################
# Automatically saved keybindings
#

bind "main" "L" = "history-move-forward"
bind "main" "H" = "history-move-back"



##################################
# Automatically saved keybindings
#

bind "main" "r" = "reload"
bind "main" "Ctrl-U" = "move-page-up"



##############################
# Automatically saved options
#

## protocol 
#  Protocol specific options.

  ## protocol.rewrite 
  #  Rules for rewriting URIs entered in the goto dialog.
  #  It makes it possible to define a set of prefixes that will
  #  be expanded if they match a string entered in the goto dialog.
  #  The prefixes can be dumb, meaning that they work only like
  #  URI abbreviations, or smart ones, making it possible to pass
  #  arguments to them like search engine keywords.

    ## protocol.rewrite.smart 
    #  Smart prefixes, see enable-smart description for details.

      ## protocol.rewrite.smart.gg <str>
      #  Replacement URI for this smartprefix:
      #  %c in the string means the current URL
      #  %s in the string means the whole argument to smartprefix
      #  %0,%1,...,%9 means argument 0, 1, ..., 9
      #  %% in the string means '%'
      set protocol.rewrite.smart.gg = "http://search.yahoo.com/search?ei=UTF-8&fr=yfp-t-501&cop=mss&p=%s"







##############################
# Automatically saved options
#

## protocol 
#  Protocol specific options.

  ## protocol.rewrite 
  #  Rules for rewriting URIs entered in the goto dialog.
  #  It makes it possible to define a set of prefixes that will
  #  be expanded if they match a string entered in the goto dialog.
  #  The prefixes can be dumb, meaning that they work only like
  #  URI abbreviations, or smart ones, making it possible to pass
  #  arguments to them like search engine keywords.

    ## protocol.rewrite.smart 
    #  Smart prefixes, see enable-smart description for details.

      ## protocol.rewrite.smart.g <str>
      #  Replacement URI for this smartprefix:
      #  %c in the string means the current URL
      #  %s in the string means the whole argument to smartprefix
      #  %0,%1,...,%9 means argument 0, 1, ..., 9
      #  %% in the string means '%'
      set protocol.rewrite.smart.g = "http://new.m.yahoo.com/w/onesearch/oneSearch?p=%s&b=1&n=20&stype=web"







##############################
# Automatically saved options
#

## protocol 
#  Protocol specific options.

  ## protocol.rewrite 
  #  Rules for rewriting URIs entered in the goto dialog.
  #  It makes it possible to define a set of prefixes that will
  #  be expanded if they match a string entered in the goto dialog.
  #  The prefixes can be dumb, meaning that they work only like
  #  URI abbreviations, or smart ones, making it possible to pass
  #  arguments to them like search engine keywords.

    ## protocol.rewrite.smart 
    #  Smart prefixes, see enable-smart description for details.

      ## protocol.rewrite.smart.wp <str>
      #  Replacement URI for this smartprefix:
      #  %c in the string means the current URL
      #  %s in the string means the whole argument to smartprefix
      #  %0,%1,...,%9 means argument 0, 1, ..., 9
      #  %% in the string means '%'
      set protocol.rewrite.smart.wp = "http://en.wikipedia.org/w/wiki.phtml?search=%s"







##############################
# Automatically saved options
#

## terminal 
#  Terminal options.

  ## terminal.screen 
  #  Options specific to this terminal type (according to $TERM value).

    ## terminal.screen.type <num>
    set terminal.screen.type = 1


