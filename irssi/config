servers = (
  { address = "irc.stealth.net"; chatnet = "IRCnet"; port = "6668"; },
  { address = "irc.efnet.net"; chatnet = "EFNet"; autoconnect = "yes"; port = "6667"; },
  { 
    address = "irc.undernet.org";
    chatnet = "Undernet";
    port = "6667";
  },
  { address = "irc.dal.net"; chatnet = "DALnet"; port = "6667"; },
  { 
    address = "irc.freenode.net";
    chatnet = "freenode";
    port = "6667";
    autoconnect = "yes";
  },
  { address = "irc.gnome.org"; chatnet = "GIMPNet"; port = "6667"; },
  { address = "irc.ptlink.net"; chatnet = "PTlink"; port = "6667"; },
  { 
    address = "irc.sorcery.net";
    chatnet = "SorceryNet";
    port = "6667";
  },
  { 
    address = "irc.hashmark.net";
    chatnet = "Hashmark";
    port = "6667";
  },
  { address = "irc.ptnet.org"; chatnet = "PTnet"; port = "6667"; },
  { 
    address = "irc.azzurra.org";
    chatnet = "AzzurraNET";
    port = "6667";
  },
  { address = "silc.silcnet.org"; chatnet = "SILC"; port = "706"; },
);

chatnets = {
  IRCnet = {
    type = "IRC";
    max_kicks = "4";
    max_modes = "3";
    max_msgs = "5";
    max_whois = "4";
    max_query_chans = "5";
  };
  EFNet = {
    type = "IRC";
    max_kicks = "4";
    max_modes = "4";
    max_msgs = "3";
    max_whois = "1";
  };
  Undernet = {
    type = "IRC";
    max_kicks = "4";
    max_modes = "3";
    max_msgs = "3";
    max_whois = "30";
  };
  DALnet = {
    type = "IRC";
    max_kicks = "4";
    max_modes = "6";
    max_msgs = "3";
    max_whois = "30";
  };
  freenode = {
    type = "IRC";
    autosendcmd = "/^msg nickserv ident lesheros;wait -freenode 2000";
    max_kicks = "4";
    max_msgs = "1";
    max_modes = "4";
    max_whois = "1";
  };
  GIMPNet = {
    type = "IRC";
    max_kicks = "4";
    max_modes = "4";
    max_msgs = "3";
    max_whois = "1";
  };
  PTlink = {
    type = "IRC";
    max_kicks = "1";
    max_modes = "6";
    max_msgs = "30";
    max_whois = "1";
  };
  SorceryNet = {
    type = "IRC";
    max_kicks = "30";
    max_modes = "6";
    max_msgs = "30";
    max_whois = "30";
  };
  Hashmark = {
    type = "IRC";
    max_kicks = "4";
    max_modes = "3";
    max_msgs = "3";
    max_whois = "30";
  };
  PTnet = {
    type = "IRC";
    max_kicks = "30";
    max_modes = "13";
    max_msgs = "10";
    max_whois = "30";
  };
  AzzurraNET = {
    type = "IRC";
    max_kicks = "4";
    max_modes = "6";
    max_msgs = "3";
  };
  SILC = { type = "SILC"; };
};

channels = (
  { name = "#irssi"; chatnet = "ircnet"; autojoin = "No"; },
  { name = "#irssi"; chatnet = "freenode"; autojoin = "No"; },
  { name = "silc"; chatnet = "silc"; autojoin = "No"; },
  { name = "#openbsd"; chatnet = "freenode"; autojoin = "yes"; },
  { name = "#grml"; chatnet = "freenode"; autojoin = "yes"; },
  { name = "#mininova"; chatnet = "efnet"; autojoin = "yes"; }
);

aliases = {
  J = "join";
  WJOIN = "join -window";
  WQUERY = "query -window";
  LEAVE = "part";
  BYE = "quit";
  EXIT = "quit";
  SIGNOFF = "quit";
  DESCRIBE = "action";
  DATE = "time";
  HOST = "userhost";
  LAST = "lastlog";
  SAY = "msg *";
  WI = "whois";
  WII = "whois $0 $0";
  WW = "whowas";
  W = "who";
  N = "names";
  M = "msg";
  T = "topic";
  C = "clear";
  CL = "clear";
  K = "kick";
  KB = "kickban";
  KN = "knockout";
  BANS = "ban";
  B = "ban";
  MUB = "unban *";
  UB = "unban";
  IG = "ignore";
  UNIG = "unignore";
  SB = "scrollback";
  UMODE = "mode $N";
  WC = "window close";
  WN = "window new hide";
  SV = "say Irssi $J ($V) - http://irssi.org/";
  GOTO = "sb goto";
  CHAT = "dcc chat";
  RUN = "SCRIPT LOAD";
  UPTIME = "eval exec - expr `date +%s` - \\$F | awk '{print \"Irssi uptime: \"int(\\\\\\$1/3600/24)\"d \"int(\\\\\\$1/3600%24)\"h \"int(\\\\\\$1/60%60)\"m \"int(\\\\\\$1%60)\"s\" }'";
  CALC = "exec - if which bc &>/dev/null\\; then echo '$*' | bc | awk '{print \"$*=\"$$1}'\\; else echo bc was not found\\; fi";
  SBAR = "STATUSBAR";
  INVITELIST = "mode $C +I";
  Q = "QUERY";
  lasttv = "lastlog \"TV Shows\"";
};

statusbar = {
  # formats:
  # when using {templates}, the template is shown only if it's argument isn't
  # empty unless no argument is given. for example {sb} is printed always,
  # but {sb $T} is printed only if $T isn't empty.

  items = {
    # start/end text in statusbars
    barstart = "{sbstart}";
    barend = "{sbend}";

    topicbarstart = "{topicsbstart}";
    topicbarend = "{topicsbend}";

    # treated "normally", you could change the time/user name to whatever
    #    time = "{sb $Z}";
    user = "{sb {sbnickmode $cumode}$N{sbmode $usermode}{sbaway $A}}";

    # treated specially .. window is printed with non-empty windows,
    # window_empty is printed with empty windows
    window = "{sb $winref:$itemname{sbmode $M}}";
    window_empty = "{sb $winref{sbservertag $tag}}";
    prompt = "{prompt $[.15]itemname}";
    prompt_empty = "{prompt $winname}";
    topic = " $topic";
    topic_empty = " Irssi v$J - http://irssi.org/help/";

    # all of these treated specially, they're only displayed when needed
    lag = "{sb Lag: $0-}";
    act = "{sb Act: $0-}";
    more = "-- more --";
  };

  # there's two type of statusbars. root statusbars are either at the top
  # of the screen or at the bottom of the screen. window statusbars are at
  # the top/bottom of each split window in screen.
  default = {
    # the "default statusbar" to be displayed at the bottom of the window.
    # contains all the normal items.
    window = {
      disabled = "no";

      # window, root
      type = "window";
      # top, bottom
      placement = "bottom";
      # number
      position = "1";
      # active, inactive, always
      visible = "active";

      # list of items in statusbar in the display order
      items = {
        barstart = { priority = "100"; };
        # time = { };
        user = { };
        window = { };
        window_empty = { };
        lag = { priority = "-1"; };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
        usercount = { };
      };
    };

    # statusbar to use in inactive split windows
    window_inact = {
      type = "window";
      placement = "bottom";
      position = "1";
      visible = "inactive";
      items = {
        barstart = { priority = "100"; };
        window = { };
        window_empty = { };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
    };

    # we treat input line as yet another statusbar :) It's possible to
    # add other items before or after the input line item.
    prompt = {
      type = "root";
      placement = "bottom";
      # we want to be at the bottom always
      position = "100";
      visible = "always";
      items = {
        prompt = { priority = "-1"; };
        prompt_empty = { priority = "-1"; };
        # treated specially, this is the real input line.
        input = { priority = "10"; };
      };
    };

    # topicbar
    topic = {
      type = "root";
      placement = "top";
      position = "1";
      visible = "always";
      items = {
        topicbarstart = { priority = "100"; };
        topic = { };
        topic_empty = { };
        topicbarend = { priority = "100"; alignment = "right"; };
      };
    };
    awl_0 = {
      items = {
        barstart = { priority = "100"; };
        awl_0 = { };
        barend = { priority = "100"; alignment = "right"; };
      };
    };
  };
};
settings = {
  core = {
    real_name = "emx";
    user_name = "emx";
    nick = "lt_kije";
    timestamp_format = "%H:%M:%S";
    hostname = "wintermute";
    quit_message = ":wq";
  };
  "fe-common/core" = {
    beep_msg_level = "MSGS HILIGHT";
    bell_beeps = "yes";
    beep_when_away = "yes";
    beep_when_window_active = "yes";
    use_status_window = "yes";
    autocreate_own_query = "yes";
    autoclose_windows = "no";
    reuse_unused_windows = "yes";
    window_auto_change = "yes";
    autocreate_split_windows = "no";
    autolog = "yes";
  };
  "irc/core" = { alternate_nick = "xl0"; };
  "perl/core/scripts" = {
    maildir_mode = "yes";
    mail_show_message = "yes";
    mail_mailboxes = "1=/var/mail/will,Family=/home/will/Maildir/Personal/Family/,";
    chanact_show_all = "yes";
    chanact_display = "$H$N:$M.$S$C";
    awl_display_key = "$Q%K %n$H$C$S";
    awl_separator = "\\  ";
    awl_sort = "-last-line";
  };
  "fe-common/irc" = { show_away_once = "yes"; };
};
hilights = (
  { text = "toto"; nick = "yes"; word = "yes"; },
  { text = "emx"; nick = "yes"; word = "yes"; },
  { text = "mike"; nick = "yes"; word = "yes"; },
  { text = "TV Show"; nick = "yes"; word = "yes"; }
);
keyboard = (
  { key = "end"; id = "scroll_end"; data = ""; },
  { key = "home"; id = "scroll_start"; data = ""; },
  { key = "^[W"; id = "command"; data = "echo works"; },
  { key = "meta-h"; id = "left_window"; data = ""; },
  { key = "meta-l"; id = "right_window"; data = ""; },
  { key = "meta-j"; id = "upper_window"; data = ""; },
  { key = "meta-k"; id = "upper_window"; data = ""; },
  { key = "^W^W"; id = "lower_window"; data = ""; },
  { key = "^Wj"; id = "lower_window"; data = ""; },
  { key = "^Wk"; id = "upper_window"; data = ""; },
  { key = "^W^J"; id = "lower_window"; data = ""; },
  { key = "^W^K"; id = "upper_window"; data = ""; },
  { key = "^Wl"; id = "next_window"; data = ""; },
  { key = "^W^L"; id = "next_window"; data = ""; },
  { key = "^Wh"; id = "previous_window"; data = ""; },
  { key = "^W^H"; id = "previous_window"; data = ""; },
  { key = "^W"; id = "key"; data = "window"; },
  { key = "window-h"; id = "previous_window"; data = ""; },
  { key = "window-^H"; id = "previous_window"; data = ""; },
  { key = "window-^L"; id = "next_window"; data = ""; },
  { key = "window-l"; id = "next_window"; data = ""; },
  { key = "window-^K"; id = "upper_window"; data = ""; },
  { key = "window-k"; id = "upper_window"; data = ""; },
  { key = "window-^W"; id = "lower_window"; data = ""; },
  { key = "window-j"; id = "lower_window"; data = ""; },
  { key = "window-^J"; id = "lower_window"; data = ""; },
  { key = "window-c"; id = "command"; data = "window new hide"; },
  { key = "window-^C"; id = "command"; data = "window new hide"; }
);
logs = { };
ignores = ( { mask = "Tattoo"; level = "ALL"; } );
windows = {
  3 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#openbsd";
        tag = "freenode";
      }
    );
  };
  2 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#mininova";
        tag = "EFNet";
      }
    );
  };
  1 = { 
    immortal = "yes";
    name = "(status)";
    level = "ALL";
    sticky = "yes";
  };
  4 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#grml";
        tag = "freenode";
      }
    );
  };
};
mainwindows = {
  1 = { first_line = "34"; lines = "12"; };
  3 = { first_line = "1"; lines = "33"; };
};
